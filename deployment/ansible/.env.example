# Project name without spaces, will be used as a prefix for all services
# AWS IAM doesn't allow spaces, underscores and other values in the name
# IAM will be created with this name
# S3 bucket will be created with this name
# minimum 6 characters
PROJECT_NAME=projectnamewithoutspaces

# Data for connecting to server
ANSIBLE_HOST=127.0.0.1
ANSIBLE_PASSWORD=strong_password

# Domain name, that will be used for the project, should be added to Cloudflare
DOMAIN=domain.com
# Cloudflare admin accout, that has the domain added
ROOT_CLOUDFLARE_ACCOUNT_EMAIL=admin@example.com
# Cloudflare API key, not Token
ROOT_CLOUDFLARE_ACCOUNT_API_KEY=590cceb74796457a92f171b77d2d0ffe9dfa0
ROOT_CLOUDFLARE_ACCOUNT_EMAIL
ROOT_CLOUDFLARE_ACCOUNT_API_KEY
# AWS Variables that has permissions:
# - AmazonS3FullAccess
# - IAMFullAccess
ROOT_AWS_ACCESS_KEY=XXXXXXXXXXXXXXXXXXXX
ROOT_AWS_SECRET_ACCESS_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


# Traefik Variables, will be used as basic auth for Traefik dashboard
TRAEFIK_USERNAME=code
TRAEFIK_PASSWORD=strong_password
TRAEFIK_SERVICE_SUBDOMAIN=traefik

# Postainer admin user, will be created on the first run
PORTAINER_USERNAME=code
PORTAINER_PASSWORD=very_strong_password
PORTAINER_SERVICE_SUBDOMAIN=portainer

# Postgres Database Variables
DATABASE_NAME=projectnamewithoutspaces
DATABASE_USERNAME=projectnamewithoutspaces
DATABASE_PASSWORD=postgres_strong_password

# Backend Variables
BACKEND_SERVICE_NAME=backend
# Subdomain of $DOMAIN
BACKEND_SERVICE_SUBDOMAIN=api
BACKEND_DOCKER_HUB_REPOSITORY_NAME=dockerhub_account/dockerhub_repository_backend:0.0.1
JWT_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
ADMIN_JWT_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
APP_KEYS=XXXXXXXXXXXXXXXXXXXXXXXX
API_TOKEN_SALT=XXXXXXXXXXXXXXXXXXXXXXXX

# Frontend Variables
FRONTEND_SERVICE_NAME=frontend
# Frontend subdomain of $DOMAIN
# If you want to use root domain, leave it empty, just like this:
# FRONTEND_SERVICE_SUBDOMAIN=
FRONTEND_SERVICE_SUBDOMAIN=
FRONTEND_DOCKER_HUB_REPOSITORY_NAME=dockerhub_account/dockerhub_repository_frontend:0.0.1

# Documentation Variables
DOCUMENTATION_SERVICE_NAME=documentation
# Frontend subdomain of $DOMAIN
# If you want to use root domain, leave it empty, just like this:
# DOCUMENTATION_SERVICE_SUBDOMAIN=
DOCUMENTATION_SERVICE_SUBDOMAIN=documentation
DOCUMENTATION_DOCKER_HUB_REPOSITORY_NAME=dockerhub_account/dockerhub_repository_documentation:0.0.1

# Docker Hub Variables
DOCKER_HUB_USERNAME=dockerhub_account
DOCKER_HUB_PASSWORD=dockerhub_password
DOCKER_HUB_URL=registry.hub.docker.com
DOCKER_HUB_LOGIN_USERNAME=dockerhub_account

# Token with write access to the repository
# Contents: read and write
# Secrets: read and write
# Variables: read and write
GITHUB_TOKEN=github_pat_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
GITHUB_REPOSITORY=account/repository


# Sentry
# How to get API KEY read here
# https://docs.sentry.io/api/guides/create-auth-token
ROOT_SENTRY_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
ROOT_SENTRY_ORGANIZATION_SLUG=organization
ROOT_SENTRY_TEAM_SLUG=organization

# To prevent seeding database in GitHub
# Sometimes github can't connect to database host
# in that case you need to run database seeding manually on server
AVOID_DATABASE_SEEDING=1