---
- name: Create SSL certificate
  hosts: all
  become: yes
  vars:
    - account_email: "{{ CLOUDFLARE_ACCOUNT_EMAIL }}"
    - account_api_key: "{{ CLOUDFLARE_ACCOUNT_API_KEY }}"
    - domain: "{{ DOMAIN }}"
    - state: "{{ STATE }}"
    - frontend_url: "{{ FRONTEND_URL }}"
    - documentation_url: "{{ DOCUMENTATION_URL }}"
    - backend_url: "{{ BACKEND_URL }}"
    - portainer_url: "{{ PORTAINER_URL }}"
    - traefik_url: "{{ TRAEFIK_URL }}"
  tasks:
    - name: Copy prepare_csr_body script file
      copy:
        src: prepare_csr_body.sh
        dest: /home/code/prepare_csr_body.sh
        mode: 777

    - name: Create SSL certificate csr
      command: "openssl req \
        -new \
        -newkey rsa:2048 \
        -nodes \
        -days 5475 \
        -subj '/C=US/ST=California/L=/O=/CN={{ domain }}' \
        -addext 'subjectAltName=\
        DNS:{{ traefik_url }},\
        DNS:{{ portainer_url }},\
        DNS:{{ frontend_url }},\
        DNS:{{ documentation_url }},\
        DNS:{{ backend_url }}' \
        -keyout /home/code/{{ domain }}.key \
        -out /home/code/{{ domain }}.csr"

    - name: Copy csr to local machine
      fetch:
        src: /home/code/{{ domain }}.csr
        dest: certs/
        flat: yes

    - name: Get csr file data
      shell:
        cmd: "cat /home/code/{{ domain }}.csr"
      register: csr_file_content

    - name: Register SSL certificate
      uri:
        url: "https://api.cloudflare.com/client/v4/certificates"
        method: POST
        headers:
          Content-Type: "application/json"
          X-Auth-Key: "{{ account_api_key }}"
          X-Auth-Email: "{{ account_email }}"
        body_format: json
        body:
          hostnames:
            - "{{ traefik_url }}"
            - "{{ portainer_url }}"
            - "{{ frontend_url }}"
            - "{{ documentation_url }}"
            - "{{ backend_url }}"
            # - "{{ domain }}"
            # - "*.{{ domain }}"
          requesprted_validity: 5475
          request_type: "origin-rsa"
          csr: "{{ csr_file_content.stdout }}"
      register: cloudflare_cert

    - name: Create certs directory
      file:
        path: /home/code/certs
        state: directory
        mode: 0755

    - name: Place certificate to certs folder
      copy:
        content: "{{ cloudflare_cert.json.result.certificate }}"
        dest: /home/code/certs/{{ domain }}.crt

    - name: Move key to certs folder
      shell:
        cmd: "mv /home/code/{{ domain }}.key /home/code/certs/{{ domain }}.key"

    - name: Place certificate id to certs filder
      copy:
        content: "{{ cloudflare_cert.json.result.id }}"
        dest: /home/code/certs/certificate_id

    - name: Copy certificate to local machine
      fetch:
        src: /home/code/certs/{{ domain }}.crt
        dest: certs/
        flat: yes

    - name: Copy to key local machine
      fetch:
        src: /home/code/certs/{{ domain }}.key
        dest: certs/
        flat: yes

    - name: Copy certificate id to local machine
      fetch:
        src: /home/code/certs/certificate_id
        dest: certs/
        flat: yes
