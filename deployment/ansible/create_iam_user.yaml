---
- name: Create IAM user
  hosts: all
  become: yes
  vars:
    aws_access_key: "{{ AWS_ACCESS_KEY }}"
    aws_secret_access_key: "{{ AWS_SECRET_ACCESS_KEY }}"
    project_name: "{{ PROJECT_NAME }}"
  tasks:
    - name: Install required Python packages
      pip:
        name: "{{ item }}"
        state: present
        executable: pip3
        extra_args: --no-build-isolation
      loop:
        - boto
        - boto3
        - botocore
        - awscli

    - name: Create IAM user
      amazon.aws.iam_user:
        name: "{{ project_name }}"
        state: present
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_access_key: "{{ aws_secret_access_key }}"

    - name: Create user's key
      community.aws.iam_access_key:
        user_name: "{{ project_name }}"
        state: present
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_access_key: "{{ aws_secret_access_key }}"
      register: user_key

    - name: Write key to file
      copy:
        content: "AWS_ACCESS_KEY={{ user_key.access_key.access_key_id }}\nAWS_SECRET_ACCESS_KEY={{ user_key.secret_access_key }}"
        dest: /home/code/iam.env
        mode: 0600

    - name: Copy key to local
      fetch:
        src: /home/code/iam.env
        dest: "./"
        flat: yes

    - name: Create policy for S3 bucket
      community.aws.iam_policy:
        iam_type: user
        iam_name: "{{ project_name }}"
        state: present
        policy_name: "single-s3-bucket-policy-{{ project_name }}"
        policy_json: "{{ lookup('template','single_s3_bucket_policy.j2') }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_access_key: "{{ aws_secret_access_key }}"

    - name: Create SES policy
      community.aws.iam_policy:
        iam_type: user
        iam_name: "{{ project_name }}"
        state: present
        policy_name: "ses-policy"
        policy_json: "{{ lookup('template','ses_policy.j2') }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_access_key: "{{ aws_secret_access_key }}"
