name: Update frontend

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      SLEEP_TIME:
        required: true
        type: number
      TAG:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string

env:
  FRONTEND_IMAGE_URL: ${{ secrets.DOCKER_HUB_URL }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.PROJECT_NAME }}_frontend:${{ inputs.TAG }}
  NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
  NEXT_PUBLIC_BACKEND_TOKEN: ${{ secrets.NEXT_PUBLIC_BACKEND_TOKEN }}
  NEXT_PUBLIC_FRONTEND_URL: ${{ secrets.NEXT_PUBLIC_FRONTEND_URL }}

jobs:
  create-frontend-image:
    name: Frontend version
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Sleep before start
        run: sleep ${{ inputs.SLEEP_TIME }}
      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_HUB_URL }}
          username: ${{ secrets.DOCKER_HUB_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          logout: false
      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: false
          load: true
          tags: ${{ env.FRONTEND_IMAGE_URL }}
          build-args: |
            NEXT_PUBLIC_BACKEND_URL=${{ env.NEXT_PUBLIC_BACKEND_URL }}
            NEXT_PUBLIC_BACKEND_TOKEN=${{ env.NEXT_PUBLIC_BACKEND_TOKEN }}
            NEXT_PUBLIC_FRONTEND_URL=${{ env.NEXT_PUBLIC_FRONTEND_URL }}
            NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID }}
            NEXT_PUBLIC_SENTRY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
      - name: Inspect image
        run: docker image inspect ${{ env.FRONTEND_IMAGE_URL }}
      - name: Push to registry
        run: docker push ${{ env.FRONTEND_IMAGE_URL }}

  deploy-frontend:
    name: Run deployer
    runs-on: ubuntu-latest
    needs:
      - create-frontend-image
    steps:
      - name: Send webhook for staging service update
        if: ${{ inputs.ENVIRONMENT == 'staging' }}
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.PORTAINER_STAGING_FRONTEND_UPDATE_URL }}?tag=${{ inputs.TAG }}
          method: "POST"
          timeout: 40000
      - name: Send webhook for service update
        if: ${{ inputs.ENVIRONMENT == 'production' }}
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.PORTAINER_PRODUCTION_FRONTEND_UPDATE_URL }}?tag=${{ inputs.TAG }}
          method: "POST"
          timeout: 40000
